/**
 * generated by Xtext 2.19.0
 */
package org.xtext.example.mydsl.tests;

import com.google.inject.Inject;
import org.eclipse.xtext.testing.InjectWith;
import org.eclipse.xtext.testing.extensions.InjectionExtension;
import org.eclipse.xtext.testing.util.ParseHelper;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.xtext.example.mydsl.tests.SatInjectorProvider;

@ExtendWith(InjectionExtension.class)
@InjectWith(SatInjectorProvider.class)
@SuppressWarnings("all")
public class SatParsingTest {
  @Inject
  private /* ParseHelper<SAT> */Object parseHelper;
  
  @Test
  public void loadModel() {
    throw new Error("Unresolved compilation problems:"
      + "\nThe field SatParsingTest.parseHelper refers to the missing type SAT"
      + "\neResource cannot be resolved"
      + "\nerrors cannot be resolved"
      + "\nisEmpty cannot be resolved"
      + "\njoin cannot be resolved");
  }
  
  @Test
  public void Point1() {
    throw new Error("Unresolved compilation problems:"
      + "\nThe method InputHandler(SAT) is undefined for the type Class<Utils>"
      + "\nThe field SatParsingTest.parseHelper refers to the missing type SAT"
      + "\n== cannot be resolved");
  }
  
  @Test
  public void Point2() {
    throw new Error("Unresolved compilation problems:"
      + "\nThe method InputHandler(SAT) is undefined for the type Class<Utils>"
      + "\nThe field SatParsingTest.parseHelper refers to the missing type SAT"
      + "\n== cannot be resolved");
  }
  
  @Test
  public void comparison() {
    throw new Error("Unresolved compilation problems:"
      + "\nThe method InputHandler(SAT) is undefined for the type Class<Utils>"
      + "\nThe method InputHandler(SAT) is undefined for the type Class<Utils>"
      + "\nThe field SatParsingTest.parseHelper refers to the missing type SAT"
      + "\nThe field SatParsingTest.parseHelper refers to the missing type SAT"
      + "\n== cannot be resolved");
  }
}
