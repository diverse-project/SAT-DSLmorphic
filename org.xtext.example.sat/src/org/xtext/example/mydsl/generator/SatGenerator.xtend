/*
 * generated by Xtext 2.19.0
 */
package org.xtext.example.mydsl.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import org.xtext.example.mydsl.sat.Expression
import org.xtext.example.mydsl.sat.Instruction
import org.xtext.example.mydsl.sat.SatFactory
import java.io.BufferedReader
import java.io.FileReader
import java.io.PrintStream
import java.io.File

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class SatGenerator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
//		fsa.generateFile('greetings.txt', 'People to greet: ' + 
//			resource.allContents
//				.filter(Greeting)
//				.map[name]
//				.join(', '))

	var path = "/home/yarduoc/ENS_INFO/M1/DSL/dimacs.cnf"
	if( resource.contents.get(0) instanceof Instruction){
		
		var ct = resource.contents.get(0) as Instruction
		
		if(ct.expr === null){
			path = ct.path;
		}
		else{
			println("DIMACS")
			var str = DIMACSConverter.toDIMACS(CNFConverter.CNFConvert(ct.expr));
			val fout = new PrintStream(new File(path))
			fout.println(str)
			fout.close;
			
		}
		
		if( ct.solver.str.equals("sat4j-java")){
			Solver.solveJava(path);		
		}
		else if( ct.solver.str.equals("sat4j-jar")){
			Solver.solveJar(path);
		}
		else{ 
			var BufferedReader br = new BufferedReader(new FileReader(path));
			var String line = null;
			while ((line = br.readLine()) !== null) {
				println(line);
			}
		}
	}
	else {
		println(PrettyPrinter.PrettyPrint((resource.contents.get(0) as Expression)));
	}
	}
}