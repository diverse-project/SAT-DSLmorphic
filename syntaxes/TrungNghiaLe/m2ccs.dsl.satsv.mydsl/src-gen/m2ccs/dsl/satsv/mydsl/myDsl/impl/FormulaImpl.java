/**
 * generated by Xtext 2.19.0
 */
package m2ccs.dsl.satsv.mydsl.myDsl.impl;

import java.util.Collection;

import m2ccs.dsl.satsv.mydsl.myDsl.Formula;
import m2ccs.dsl.satsv.mydsl.myDsl.MyDslPackage;
import m2ccs.dsl.satsv.mydsl.myDsl.Variable;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Formula</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link m2ccs.dsl.satsv.mydsl.myDsl.impl.FormulaImpl#getVar <em>Var</em>}</li>
 *   <li>{@link m2ccs.dsl.satsv.mydsl.myDsl.impl.FormulaImpl#getOp <em>Op</em>}</li>
 *   <li>{@link m2ccs.dsl.satsv.mydsl.myDsl.impl.FormulaImpl#getArg <em>Arg</em>}</li>
 *   <li>{@link m2ccs.dsl.satsv.mydsl.myDsl.impl.FormulaImpl#getArg1 <em>Arg1</em>}</li>
 *   <li>{@link m2ccs.dsl.satsv.mydsl.myDsl.impl.FormulaImpl#getArg2 <em>Arg2</em>}</li>
 * </ul>
 *
 * @generated
 */
public class FormulaImpl extends MinimalEObjectImpl.Container implements Formula
{
  /**
   * The cached value of the '{@link #getVar() <em>Var</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVar()
   * @generated
   * @ordered
   */
  protected EList<Variable> var;

  /**
   * The cached value of the '{@link #getOp() <em>Op</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOp()
   * @generated
   * @ordered
   */
  protected EList<EObject> op;

  /**
   * The cached value of the '{@link #getArg() <em>Arg</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArg()
   * @generated
   * @ordered
   */
  protected EList<Formula> arg;

  /**
   * The cached value of the '{@link #getArg1() <em>Arg1</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArg1()
   * @generated
   * @ordered
   */
  protected EList<Formula> arg1;

  /**
   * The cached value of the '{@link #getArg2() <em>Arg2</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArg2()
   * @generated
   * @ordered
   */
  protected EList<Formula> arg2;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected FormulaImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.FORMULA;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Variable> getVar()
  {
    if (var == null)
    {
      var = new EObjectContainmentEList<Variable>(Variable.class, this, MyDslPackage.FORMULA__VAR);
    }
    return var;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<EObject> getOp()
  {
    if (op == null)
    {
      op = new EObjectContainmentEList<EObject>(EObject.class, this, MyDslPackage.FORMULA__OP);
    }
    return op;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Formula> getArg()
  {
    if (arg == null)
    {
      arg = new EObjectContainmentEList<Formula>(Formula.class, this, MyDslPackage.FORMULA__ARG);
    }
    return arg;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Formula> getArg1()
  {
    if (arg1 == null)
    {
      arg1 = new EObjectContainmentEList<Formula>(Formula.class, this, MyDslPackage.FORMULA__ARG1);
    }
    return arg1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Formula> getArg2()
  {
    if (arg2 == null)
    {
      arg2 = new EObjectContainmentEList<Formula>(Formula.class, this, MyDslPackage.FORMULA__ARG2);
    }
    return arg2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.FORMULA__VAR:
        return ((InternalEList<?>)getVar()).basicRemove(otherEnd, msgs);
      case MyDslPackage.FORMULA__OP:
        return ((InternalEList<?>)getOp()).basicRemove(otherEnd, msgs);
      case MyDslPackage.FORMULA__ARG:
        return ((InternalEList<?>)getArg()).basicRemove(otherEnd, msgs);
      case MyDslPackage.FORMULA__ARG1:
        return ((InternalEList<?>)getArg1()).basicRemove(otherEnd, msgs);
      case MyDslPackage.FORMULA__ARG2:
        return ((InternalEList<?>)getArg2()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.FORMULA__VAR:
        return getVar();
      case MyDslPackage.FORMULA__OP:
        return getOp();
      case MyDslPackage.FORMULA__ARG:
        return getArg();
      case MyDslPackage.FORMULA__ARG1:
        return getArg1();
      case MyDslPackage.FORMULA__ARG2:
        return getArg2();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.FORMULA__VAR:
        getVar().clear();
        getVar().addAll((Collection<? extends Variable>)newValue);
        return;
      case MyDslPackage.FORMULA__OP:
        getOp().clear();
        getOp().addAll((Collection<? extends EObject>)newValue);
        return;
      case MyDslPackage.FORMULA__ARG:
        getArg().clear();
        getArg().addAll((Collection<? extends Formula>)newValue);
        return;
      case MyDslPackage.FORMULA__ARG1:
        getArg1().clear();
        getArg1().addAll((Collection<? extends Formula>)newValue);
        return;
      case MyDslPackage.FORMULA__ARG2:
        getArg2().clear();
        getArg2().addAll((Collection<? extends Formula>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.FORMULA__VAR:
        getVar().clear();
        return;
      case MyDslPackage.FORMULA__OP:
        getOp().clear();
        return;
      case MyDslPackage.FORMULA__ARG:
        getArg().clear();
        return;
      case MyDslPackage.FORMULA__ARG1:
        getArg1().clear();
        return;
      case MyDslPackage.FORMULA__ARG2:
        getArg2().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.FORMULA__VAR:
        return var != null && !var.isEmpty();
      case MyDslPackage.FORMULA__OP:
        return op != null && !op.isEmpty();
      case MyDslPackage.FORMULA__ARG:
        return arg != null && !arg.isEmpty();
      case MyDslPackage.FORMULA__ARG1:
        return arg1 != null && !arg1.isEmpty();
      case MyDslPackage.FORMULA__ARG2:
        return arg2 != null && !arg2.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //FormulaImpl
