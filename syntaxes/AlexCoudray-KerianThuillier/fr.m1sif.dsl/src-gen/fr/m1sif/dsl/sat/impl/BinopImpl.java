/**
 * generated by Xtext 2.19.0
 */
package fr.m1sif.dsl.sat.impl;

import fr.m1sif.dsl.sat.Binop;
import fr.m1sif.dsl.sat.Expression;
import fr.m1sif.dsl.sat.SatPackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Binop</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link fr.m1sif.dsl.sat.impl.BinopImpl#getLeftParam <em>Left Param</em>}</li>
 *   <li>{@link fr.m1sif.dsl.sat.impl.BinopImpl#getOp <em>Op</em>}</li>
 *   <li>{@link fr.m1sif.dsl.sat.impl.BinopImpl#getRightParam <em>Right Param</em>}</li>
 * </ul>
 *
 * @generated
 */
public class BinopImpl extends ExpressionImpl implements Binop
{
  /**
   * The cached value of the '{@link #getLeftParam() <em>Left Param</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLeftParam()
   * @generated
   * @ordered
   */
  protected Expression leftParam;

  /**
   * The default value of the '{@link #getOp() <em>Op</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOp()
   * @generated
   * @ordered
   */
  protected static final String OP_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getOp() <em>Op</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOp()
   * @generated
   * @ordered
   */
  protected String op = OP_EDEFAULT;

  /**
   * The cached value of the '{@link #getRightParam() <em>Right Param</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRightParam()
   * @generated
   * @ordered
   */
  protected Expression rightParam;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected BinopImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SatPackage.Literals.BINOP;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expression getLeftParam()
  {
    return leftParam;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetLeftParam(Expression newLeftParam, NotificationChain msgs)
  {
    Expression oldLeftParam = leftParam;
    leftParam = newLeftParam;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SatPackage.BINOP__LEFT_PARAM, oldLeftParam, newLeftParam);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLeftParam(Expression newLeftParam)
  {
    if (newLeftParam != leftParam)
    {
      NotificationChain msgs = null;
      if (leftParam != null)
        msgs = ((InternalEObject)leftParam).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SatPackage.BINOP__LEFT_PARAM, null, msgs);
      if (newLeftParam != null)
        msgs = ((InternalEObject)newLeftParam).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SatPackage.BINOP__LEFT_PARAM, null, msgs);
      msgs = basicSetLeftParam(newLeftParam, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SatPackage.BINOP__LEFT_PARAM, newLeftParam, newLeftParam));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getOp()
  {
    return op;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOp(String newOp)
  {
    String oldOp = op;
    op = newOp;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SatPackage.BINOP__OP, oldOp, op));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expression getRightParam()
  {
    return rightParam;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRightParam(Expression newRightParam, NotificationChain msgs)
  {
    Expression oldRightParam = rightParam;
    rightParam = newRightParam;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SatPackage.BINOP__RIGHT_PARAM, oldRightParam, newRightParam);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRightParam(Expression newRightParam)
  {
    if (newRightParam != rightParam)
    {
      NotificationChain msgs = null;
      if (rightParam != null)
        msgs = ((InternalEObject)rightParam).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SatPackage.BINOP__RIGHT_PARAM, null, msgs);
      if (newRightParam != null)
        msgs = ((InternalEObject)newRightParam).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SatPackage.BINOP__RIGHT_PARAM, null, msgs);
      msgs = basicSetRightParam(newRightParam, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SatPackage.BINOP__RIGHT_PARAM, newRightParam, newRightParam));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SatPackage.BINOP__LEFT_PARAM:
        return basicSetLeftParam(null, msgs);
      case SatPackage.BINOP__RIGHT_PARAM:
        return basicSetRightParam(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SatPackage.BINOP__LEFT_PARAM:
        return getLeftParam();
      case SatPackage.BINOP__OP:
        return getOp();
      case SatPackage.BINOP__RIGHT_PARAM:
        return getRightParam();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SatPackage.BINOP__LEFT_PARAM:
        setLeftParam((Expression)newValue);
        return;
      case SatPackage.BINOP__OP:
        setOp((String)newValue);
        return;
      case SatPackage.BINOP__RIGHT_PARAM:
        setRightParam((Expression)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SatPackage.BINOP__LEFT_PARAM:
        setLeftParam((Expression)null);
        return;
      case SatPackage.BINOP__OP:
        setOp(OP_EDEFAULT);
        return;
      case SatPackage.BINOP__RIGHT_PARAM:
        setRightParam((Expression)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SatPackage.BINOP__LEFT_PARAM:
        return leftParam != null;
      case SatPackage.BINOP__OP:
        return OP_EDEFAULT == null ? op != null : !OP_EDEFAULT.equals(op);
      case SatPackage.BINOP__RIGHT_PARAM:
        return rightParam != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (op: ");
    result.append(op);
    result.append(')');
    return result.toString();
  }

} //BinopImpl
