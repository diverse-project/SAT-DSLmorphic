/**
 * generated by Xtext 2.14.0
 */
package org.xtext.example.sat.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.example.sat.Expr;
import org.xtext.example.sat.ExprBin;
import org.xtext.example.sat.SatPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Expr Bin</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.sat.impl.ExprBinImpl#getExprL <em>Expr L</em>}</li>
 *   <li>{@link org.xtext.example.sat.impl.ExprBinImpl#getOp <em>Op</em>}</li>
 *   <li>{@link org.xtext.example.sat.impl.ExprBinImpl#getExprR <em>Expr R</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ExprBinImpl extends ExprImpl implements ExprBin
{
  /**
   * The cached value of the '{@link #getExprL() <em>Expr L</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExprL()
   * @generated
   * @ordered
   */
  protected Expr exprL;

  /**
   * The default value of the '{@link #getOp() <em>Op</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOp()
   * @generated
   * @ordered
   */
  protected static final String OP_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getOp() <em>Op</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOp()
   * @generated
   * @ordered
   */
  protected String op = OP_EDEFAULT;

  /**
   * The cached value of the '{@link #getExprR() <em>Expr R</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExprR()
   * @generated
   * @ordered
   */
  protected Expr exprR;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ExprBinImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SatPackage.Literals.EXPR_BIN;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expr getExprL()
  {
    return exprL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExprL(Expr newExprL, NotificationChain msgs)
  {
    Expr oldExprL = exprL;
    exprL = newExprL;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SatPackage.EXPR_BIN__EXPR_L, oldExprL, newExprL);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setExprL(Expr newExprL)
  {
    if (newExprL != exprL)
    {
      NotificationChain msgs = null;
      if (exprL != null)
        msgs = ((InternalEObject)exprL).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SatPackage.EXPR_BIN__EXPR_L, null, msgs);
      if (newExprL != null)
        msgs = ((InternalEObject)newExprL).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SatPackage.EXPR_BIN__EXPR_L, null, msgs);
      msgs = basicSetExprL(newExprL, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SatPackage.EXPR_BIN__EXPR_L, newExprL, newExprL));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getOp()
  {
    return op;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOp(String newOp)
  {
    String oldOp = op;
    op = newOp;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SatPackage.EXPR_BIN__OP, oldOp, op));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expr getExprR()
  {
    return exprR;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExprR(Expr newExprR, NotificationChain msgs)
  {
    Expr oldExprR = exprR;
    exprR = newExprR;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SatPackage.EXPR_BIN__EXPR_R, oldExprR, newExprR);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setExprR(Expr newExprR)
  {
    if (newExprR != exprR)
    {
      NotificationChain msgs = null;
      if (exprR != null)
        msgs = ((InternalEObject)exprR).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SatPackage.EXPR_BIN__EXPR_R, null, msgs);
      if (newExprR != null)
        msgs = ((InternalEObject)newExprR).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SatPackage.EXPR_BIN__EXPR_R, null, msgs);
      msgs = basicSetExprR(newExprR, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SatPackage.EXPR_BIN__EXPR_R, newExprR, newExprR));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SatPackage.EXPR_BIN__EXPR_L:
        return basicSetExprL(null, msgs);
      case SatPackage.EXPR_BIN__EXPR_R:
        return basicSetExprR(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SatPackage.EXPR_BIN__EXPR_L:
        return getExprL();
      case SatPackage.EXPR_BIN__OP:
        return getOp();
      case SatPackage.EXPR_BIN__EXPR_R:
        return getExprR();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SatPackage.EXPR_BIN__EXPR_L:
        setExprL((Expr)newValue);
        return;
      case SatPackage.EXPR_BIN__OP:
        setOp((String)newValue);
        return;
      case SatPackage.EXPR_BIN__EXPR_R:
        setExprR((Expr)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SatPackage.EXPR_BIN__EXPR_L:
        setExprL((Expr)null);
        return;
      case SatPackage.EXPR_BIN__OP:
        setOp(OP_EDEFAULT);
        return;
      case SatPackage.EXPR_BIN__EXPR_R:
        setExprR((Expr)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SatPackage.EXPR_BIN__EXPR_L:
        return exprL != null;
      case SatPackage.EXPR_BIN__OP:
        return OP_EDEFAULT == null ? op != null : !OP_EDEFAULT.equals(op);
      case SatPackage.EXPR_BIN__EXPR_R:
        return exprR != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (op: ");
    result.append(op);
    result.append(')');
    return result.toString();
  }

} //ExprBinImpl
